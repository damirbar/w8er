{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.less","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth-interceptor.service.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.less","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/http-error-handler.service.ts","webpack:///./src/app/message.service.ts","webpack:///./src/app/posts/post-create/post-create.component.css","webpack:///./src/app/posts/post-create/post-create.component.html","webpack:///./src/app/posts/post-create/post-create.component.ts","webpack:///./src/app/posts/post-list/post-list.component.html","webpack:///./src/app/posts/post-list/post-list.component.less","webpack:///./src/app/posts/post-list/post-list.component.ts","webpack:///./src/app/posts/posts.service.ts","webpack:///./src/app/rests/rest-requests/rest-requests.component.css","webpack:///./src/app/rests/rest-requests/rest-requests.component.html","webpack:///./src/app/rests/rest-requests/rest-requests.component.ts","webpack:///./src/app/user-forms/login.service.ts","webpack:///./src/app/user-forms/login/login.component.html","webpack:///./src/app/user-forms/login/login.component.less","webpack:///./src/app/user-forms/login/login.component.ts","webpack:///./src/app/user-holder.service.ts","webpack:///./src/app/user-profile/user-profile.component.html","webpack:///./src/app/user-profile/user-profile.component.less","webpack:///./src/app/user-profile/user-profile.component.ts","webpack:///./src/app/user-profile/user-updates.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RestRequestsComponent } from \"./rests/rest-requests/rest-requests.component\";\nimport {UserProfileComponent} from \"./user-profile/user-profile.component\";\n\nconst routes: Routes = [\n  {path: 'rest-requests', component: RestRequestsComponent},\n  {path: 'user-profile', component: UserProfileComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<app-header></app-header>\\n<main>\\n  <router-outlet></router-outlet>\\n\\n  <agm-map [latitude]=\\\"51.678418\\\" [longitude]=\\\"7.809007\\\"></agm-map>\\n</main>\\n\"","module.exports = \"main {\\n  margin: 1rem auto auto;\\n  width: 80%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VyYW4vV2Vic3Rvcm1Qcm9qZWN0cy93OGVyL3dlYi9zcmMvYXBwL2FwcC5jb21wb25lbnQubGVzcyIsInNyYy9hcHAvYXBwLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsdUJBQUE7RUFDQSxXQUFBO0NDQ0QiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYWluIHtcbiAgbWFyZ2luOiAxcmVtIGF1dG8gYXV0bztcbiAgd2lkdGg6IDgwJTtcbn1cbiIsIm1haW4ge1xuICBtYXJnaW46IDFyZW0gYXV0byBhdXRvO1xuICB3aWR0aDogODAlO1xufVxuIl19 */\"","import {Component, OnInit} from '@angular/core';\nimport {UserHolderService} from './user-holder.service';\nimport {LoginService} from './user-forms/login.service';\nimport {IUser} from './i-user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent implements OnInit {\n  title = 'w8erWebapp';\n\n  constructor(public userHolderService: UserHolderService,\n              public loginService: LoginService) {}\n\n\n  ngOnInit() {\n    if (!this.userHolderService.isLoggedIn()) {\n      try {\n        this.loginService.getUserWithToken()\n          .subscribe(\n            (data: IUser) => {\n\n              console.log(typeof(data));\n              if (data instanceof Array && data.length === 0) {\n                console.log('Auto login unsuccessful!');\n                return;\n              }\n              console.log('Auto login success. Authorized!');\n              this.userHolderService.setUser(data);\n            }\n          );\n      } catch (err) {\n        console.log('The user have no token.');\n      }\n    }\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport {FormsModule} from '@angular/forms';\n\nimport {\n  MatInputModule,\n  MatCardModule,\n  MatButtonModule,\n  MatToolbarModule,\n  MatExpansionModule,\n  MatSidenavModule,\n  MatSidenavContent,\n  MatSidenav,\n  MatDialogModule, MatIconModule\n} from '@angular/material';\n\n\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {PostCreateComponent} from './posts/post-create/post-create.component';\nimport {PostListComponent} from './posts/post-list/post-list.component';\nimport {PostsService} from './posts/posts.service';\nimport { LoginComponent } from './user-forms/login/login.component';\nimport {LoginService} from './user-forms/login.service';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { HttpErrorHandler } from './http-error-handler.service';\nimport { MessageService } from './message.service';\nimport { RestRequestsComponent } from './rests/rest-requests/rest-requests.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport {AuthInterceptor} from './auth-interceptor.service';\nimport {RouterModule} from '@angular/router';\nimport { AgmCoreModule } from '@agm/core';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    PostCreateComponent,\n    PostListComponent,\n    LoginComponent,\n    RestRequestsComponent,\n    UserProfileComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    HttpClientModule,\n    HttpModule,\n    FlexLayoutModule,\n    MatSidenavModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyAyKg00vFRU05qHOX6GTCR7ANb9RRYSj_o'\n    }),\n    MatDialogModule,\n    MatIconModule\n  ],\n  providers: [\n    PostsService,\n    LoginService,\n    HttpErrorHandler,\n    MessageService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }],\n  bootstrap: [AppComponent],\n  entryComponents: [LoginComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\nimport {Observable} from \"rxjs/index\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthInterceptor implements HttpInterceptor {\n\n  intercept(req: HttpRequest<any>,\n            next: HttpHandler): Observable<HttpEvent<any>> {\n\n    const idToken = localStorage.getItem(\"token\");\n\n    if (idToken) {\n      const cloned = req.clone({\n        headers: req.headers.set(\"x-access-token\",\n          idToken)\n      });\n\n      return next.handle(cloned);\n    }\n    else {\n      return next.handle(req);\n    }\n  }\n}\n","module.exports = \"<nav class=\\\"w8er-nav navbar navbar-expand-md navbar-light bg-faded\\\">\\n  <button class=\\\"navbar-toggler navbar-toggler-right\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\"\\n          data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\"\\n          aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div routerLink=\\\"/\\\" class=\\\"w8er-logo-placeholder pull-left\\\">W8er</div>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n\\n      <li class=\\\"nav-item active home-nav-btn fade-in first\\\">\\n        <a class=\\\"nav-link liner\\\" routerLink=\\\"/\\\">Home</a>\\n      </li>\\n      <li *ngIf=\\\"isLoggedIn()\\\" class=\\\"nav-item non-home-nav-btn fade-in first\\\">\\n        <a class=\\\"nav-link profile-link liner\\\" routerLink=\\\"/user-profile\\\">Profile</a>\\n      </li>\\n\\n      <li *ngIf=\\\"isLoggedIn()\\\" class=\\\"nav-item non-home-nav-btn fade-in first\\\">\\n        <a class=\\\"nav-link restaurants-link liner\\\" routerLink=\\\"/\\\">Restaurants</a>\\n      </li>\\n\\n    </ul>\\n\\n    <!--Notifications part:-->\\n    <!--<div class=\\\"fade-in first\\\" ng-show=\\\"isLoggedIn()\\\">-->\\n    <!--<button type=\\\"button\\\" class=\\\"fas fa-bell btn btn-success\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">-->\\n    <!--</button>-->\\n    <!--<div class=\\\"dropdown-menu dropdown-menu-right notifications-cont\\\">-->\\n\\n    <!--<div class=\\\"loading\\\" ng-show=\\\"loadingNotifications\\\" style=\\\"text-align: center;\\\">-->\\n    <!--<div class=\\\"fa fa-spinner fa-spin\\\" style=\\\"font-size:34px; margin: auto; width: 100%; margin-top: 8%;\\\"></div>-->\\n    <!--</div>-->\\n\\n    <!--<div class=\\\"no-nofitifications\\\" ng-if=\\\"notifications.length === 0\\\">-->\\n    <!--No notifications-->\\n    <!--</div>-->\\n    <!--<div class=\\\"dropdown-item\\\" ng-repeat=\\\"notification in notifications\\\">-->\\n    <!--<div class=\\\"notification-body font-weight-bold\\\">{{notification.content}}</div>-->\\n    <!--<div class=\\\"notification-date\\\">{{notification.creation_date | date: 'medium'}}</div>-->\\n\\n    <!--</div>-->\\n    <!--</div>-->\\n    <!--</div>-->\\n\\n\\n\\n    <button\\n      *ngIf=\\\"!isLoggedIn()\\\"\\n      class=\\\"nav-link login\\\"\\n      mat-raised-button\\n      color=\\\"accent\\\"\\n      type=\\\"submit\\\"\\n      (click)=\\\"openDialog()\\\">Request login</button>\\n\\n    <button\\n      *ngIf=\\\"isLoggedIn()\\\"\\n      class=\\\"nav-link login\\\"\\n      mat-raised-button\\n      color=\\\"primary\\\"\\n      type=\\\"submit\\\"\\n      (click)=\\\"logout()\\\">Logout</button>\\n    <!--<div class=\\\"nav-link login\\\" style=\\\"cursor: pointer\\\" (click)=\\\"openDialog()\\\">-->\\n      <!--Log In-->\\n      <!--<div class=\\\"underlined\\\"></div>-->\\n    <!--</div>-->\\n\\n    <!--Log out:-->\\n    <!--<div class=\\\"nav-link login\\\" style=\\\"cursor: pointer\\\">-->\\n    <!--<div class=\\\"logout-activator\\\" ng-click=\\\"logout()\\\">Log Out</div>-->\\n    <!--<div class=\\\"underlined\\\"></div>-->\\n    <!--</div>-->\\n\\n\\n    <!--Search: -->\\n    <!--<form class=\\\"form-inline my-2 my-lg-0 search-nav-form animate-show-hide\\\" ng-show=\\\"showSearchNav\\\">-->\\n\\n      <!--<input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\" ng-model=\\\"searchTerm.keywords\\\">-->\\n      <!--<button class=\\\"btn btn-warning my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>-->\\n\\n    <!--</form>-->\\n  </div>\\n</nav>\\n\\n\"","module.exports = \".w8er-nav {\\n  z-index: 99;\\n  /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#ff321b+66,ffca1b+89,47fa00+100 */\\n  background: #780097;\\n  /* Old browsers */\\n}\\n.w8er-nav .w8er-logo-placeholder {\\n  color: white;\\n}\\n.w8er-nav .animate-show-hide {\\n  transition: all linear 0.5s;\\n}\\n.w8er-nav .animate-show-hide.ng-hide {\\n  transition: all linear 0.5s;\\n  opacity: 0;\\n}\\n.w8er-nav .notifications-cont {\\n  background-color: #b3ff99;\\n}\\n.w8er-nav .notifications-cont .no-nofitifications {\\n  text-align: center;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VyYW4vV2Vic3Rvcm1Qcm9qZWN0cy93OGVyL3dlYi9zcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50Lmxlc3MiLCJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFBO0VDQ0EsNEhBQTRIO0VESTVILG9CQUFBO0VDRkEsa0JBQWtCO0NBQ25CO0FETEQ7RUFTSSxhQUFBO0NDREg7QURSRDtFQWVJLDRCQUFBO0NDSkg7QURPRztFQUNFLDRCQUFBO0VBQ0EsV0FBQTtDQ0xMO0FEZkQ7RUF5QkksMEJBQUE7Q0NQSDtBRGxCRDtFQTRCTSxtQkFBQTtDQ1BMIiwiZmlsZSI6InNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi53OGVyLW5hdiB7XG4gIHotaW5kZXg6IDk5O1xuICAvL2hlaWdodDogNTBweDtcbiAgLy9iYWNrZ3JvdW5kLWNvbG9yOiAjZmY2NjU0ICFpbXBvcnRhbnQ7XG5cbiAgLyogUGVybWFsaW5rIC0gdXNlIHRvIGVkaXQgYW5kIHNoYXJlIHRoaXMgZ3JhZGllbnQ6IGh0dHA6Ly9jb2xvcnppbGxhLmNvbS9ncmFkaWVudC1lZGl0b3IvI2ZmMzIxYis2NixmZmNhMWIrODksNDdmYTAwKzEwMCAqL1xuICBiYWNrZ3JvdW5kOiByZ2IoMTIwLCAwLCAxNTEpOyAvKiBPbGQgYnJvd3NlcnMgKi9cblxuICAudzhlci1sb2dvLXBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogd2hpdGU7XG4gIH1cbiAgLnNlYXJjaC1uYXYtZm9ybSB7XG4gIH1cblxuICAuYW5pbWF0ZS1zaG93LWhpZGUge1xuICAgIHRyYW5zaXRpb246IGFsbCBsaW5lYXIgMC41cztcbiAgfVxuICAuYW5pbWF0ZS1zaG93LWhpZGUge1xuICAgICYubmctaGlkZSB7XG4gICAgICB0cmFuc2l0aW9uOiBhbGwgbGluZWFyIDAuNXM7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgIH1cbiAgfVxuXG4gIC5ub3RpZmljYXRpb25zLWNvbnQge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNiM2ZmOTk7XG5cbiAgICAubm8tbm9maXRpZmljYXRpb25zIHtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG4gIH1cbn1cbiIsIi53OGVyLW5hdiB7XG4gIHotaW5kZXg6IDk5O1xuICAvKiBQZXJtYWxpbmsgLSB1c2UgdG8gZWRpdCBhbmQgc2hhcmUgdGhpcyBncmFkaWVudDogaHR0cDovL2NvbG9yemlsbGEuY29tL2dyYWRpZW50LWVkaXRvci8jZmYzMjFiKzY2LGZmY2ExYis4OSw0N2ZhMDArMTAwICovXG4gIGJhY2tncm91bmQ6ICM3ODAwOTc7XG4gIC8qIE9sZCBicm93c2VycyAqL1xufVxuLnc4ZXItbmF2IC53OGVyLWxvZ28tcGxhY2Vob2xkZXIge1xuICBjb2xvcjogd2hpdGU7XG59XG4udzhlci1uYXYgLmFuaW1hdGUtc2hvdy1oaWRlIHtcbiAgdHJhbnNpdGlvbjogYWxsIGxpbmVhciAwLjVzO1xufVxuLnc4ZXItbmF2IC5hbmltYXRlLXNob3ctaGlkZS5uZy1oaWRlIHtcbiAgdHJhbnNpdGlvbjogYWxsIGxpbmVhciAwLjVzO1xuICBvcGFjaXR5OiAwO1xufVxuLnc4ZXItbmF2IC5ub3RpZmljYXRpb25zLWNvbnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjNmZjk5O1xufVxuLnc4ZXItbmF2IC5ub3RpZmljYXRpb25zLWNvbnQgLm5vLW5vZml0aWZpY2F0aW9ucyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {MatDialog, MatDialogConfig} from '@angular/material';\nimport {LoginComponent} from '../user-forms/login/login.component';\nimport {UserHolderService} from '../user-holder.service';\nimport {LoginService} from '../user-forms/login.service';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.less']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private dialog: MatDialog, public userHolderService: UserHolderService,\n              public loginService: LoginService, private router: Router) { }\n\n  openDialog() {\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n\n    this.dialog.open(LoginComponent, dialogConfig);\n  }\n\n  isLoggedIn() {\n    return this.userHolderService.isLoggedIn();\n  }\n\n  logout() {\n    this.userHolderService.removeUser();\n    this.loginService.removeToken();\n    this.router.navigate(['']);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\n\nimport { MessageService } from './message.service';\n\n/** Type of the handleError function returned by HttpErrorHandler.createHandleError */\nexport type HandleError =\n  <T> (operation?: string, result?: T) => (error: HttpErrorResponse) => Observable<T>;\n\n/** Handles HttpClient errors */\n@Injectable()\nexport class HttpErrorHandler {\n  constructor(private messageService: MessageService) { }\n\n  /** Create curried handleError function that already knows the service name */\n  createHandleError = (serviceName = '') => <T>\n    (operation = 'operation', result = {} as T) => this.handleError(serviceName, operation, result);\n\n  /**\n   * Returns a function that handles Http operation failures.\n   * This error handler lets the app continue to run as if no error occurred.\n   * @param serviceName = name of the data service that attempted the operation\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  handleError<T> (serviceName = '', operation = 'operation', result = {} as T) {\n\n    return (error: HttpErrorResponse): Observable<T> => {\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      const message = (error.error instanceof ErrorEvent) ?\n        error.error.message :\n       `server returned code ${error.status} with body \"${error.error}\"`;\n\n      // TODO: better job of transforming error for user consumption\n      this.messageService.add(`${serviceName}: ${operation} failed: ${message}`);\n\n      // Let the app keep running by returning a safe result.\n      return of( result );\n    };\n\n  }\n}\n\n\n/*\nCopyright 2017-2018 Google Inc. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n*/","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n\n\n/*\nCopyright 2017-2018 Google Inc. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n*/","module.exports = \"\\nmat-form-field,\\ntextarea {\\n  width: 100%;\\n\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdHMvcG9zdC1jcmVhdGUvcG9zdC1jcmVhdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7O0VBRUUsWUFBWTs7Q0FFYiIsImZpbGUiOiJzcmMvYXBwL3Bvc3RzL3Bvc3QtY3JlYXRlL3Bvc3QtY3JlYXRlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbm1hdC1mb3JtLWZpZWxkLFxudGV4dGFyZWEge1xuICB3aWR0aDogMTAwJTtcblxufVxuIl19 */\"","module.exports = \"<!--<textarea rows=\\\"6\\\" [value]=\\\"newPost\\\" #postInput>{{ newPost }}</textarea>-->\\n<mat-card>\\n  <form (submit)=\\\"onAddPost(postForm)\\\" #postForm=\\\"ngForm\\\">\\n    <mat-form-field>\\n      <!--<input matInput type=\\\"text\\\" [(ngModel)]=\\\"enteredTitle\\\">-->\\n      <input matInput type=\\\"text\\\" ngModel name=\\\"title\\\" required #title=\\\"ngModel\\\">\\n      <mat-error *ngIf=\\\"title.invalid\\\">Please enter a title</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <!--<textarea matInput rows=\\\"6\\\" [(ngModel)]=\\\"enteredContent\\\">{{ newPost }}</textarea>-->\\n      <textarea matInput rows=\\\"4\\\" ngModel name=\\\"content\\\">{{ newPost }}</textarea>\\n    </mat-form-field>\\n    <button\\n      mat-raised-button\\n      color=\\\"accent\\\"\\n      type=\\\"submit\\\">Save Post</button>\\n    <!--(click)=\\\"onAddPost()\\\">Save Post</button>-->\\n  </form>\\n\\n</mat-card>\\n\\n<!--<button (click)=\\\"onAddPost(postInput)\\\">Save Post</button>-->\\n\\n\\n<p>{{ newPost }}</p>\\n\\n\\n\"","// import { Post } from '../posts.model';\n// import { Component, EventEmitter, Output } from \"@angular/core\";\nimport { Component } from \"@angular/core\";\nimport { NgForm } from '@angular/forms';\nimport {PostsService} from \"../posts.service\";\n\n@Component({\n  selector: 'app-post-create',\n  templateUrl: './post-create.component.html',\n  styleUrls: ['./post-create.component.css']\n})\nexport class PostCreateComponent {\n\n  enteredTitle   = \"\";\n  enteredContent = \"\";\n  // @Output() postCreated = new EventEmitter<Post>();\n\n  // onAddPost(postInput: HTMLTextAreaElement) {\n  //   // console.dir(postInput);\n  //   this.newPost = postInput.value;\n  // }\n  constructor(public postsService: PostsService) {}\n\n  onAddPost(form: NgForm) {\n    // const post: Post = {title: this.enteredTitle, content: this.enteredContent};\n\n    if (form.invalid) {\n      return;\n    }\n    // const post: Post = {title: form.value.title, content: form.value.content};\n    // this.postCreated.emit(post);\n    this.postsService.addPost(form.value.title, form.value.content);\n  }\n\n}\n","module.exports = \"<!--<mat-accordion multi=\\\"true\\\">-->   <!--Set multi=true if you want more than one to be expandable at once-->\\n<mat-accordion *ngIf=\\\"posts.length > 0\\\">\\n  <mat-expansion-panel *ngFor=\\\"let post of posts\\\">\\n    <mat-expansion-panel-header>\\n      {{ post.title }}\\n    </mat-expansion-panel-header>\\n\\n    <p>{{ post.content }}</p>\\n  </mat-expansion-panel>\\n</mat-accordion>\\n<p class=\\\"info-text mat-body-1\\\" *ngIf=\\\"posts.length == 0\\\">No posts added yet</p>\\n\"","module.exports = \":host {\\n  display: block;\\n  margin-top: 1rem;\\n}\\n.info-text {\\n  text-align: center  ;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VyYW4vV2Vic3Rvcm1Qcm9qZWN0cy93OGVyL3dlYi9zcmMvYXBwL3Bvc3RzL3Bvc3QtbGlzdC9wb3N0LWxpc3QuY29tcG9uZW50Lmxlc3MiLCJzcmMvYXBwL3Bvc3RzL3Bvc3QtbGlzdC9wb3N0LWxpc3QuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFBO0VBQ0EsaUJBQUE7Q0NDRDtBREVEO0VBQ0UscUJBQUE7Q0NBRCIsImZpbGUiOiJzcmMvYXBwL3Bvc3RzL3Bvc3QtbGlzdC9wb3N0LWxpc3QuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tdG9wOiAxcmVtO1xufVxuXG4uaW5mby10ZXh0IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyICA7XG59XG4iLCI6aG9zdCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tdG9wOiAxcmVtO1xufVxuLmluZm8tdGV4dCB7XG4gIHRleHQtYWxpZ246IGNlbnRlciAgO1xufVxuIl19 */\"","import { Post } from '../posts.model';\nimport { Subscription } from 'rxjs';\n\n// import { Component, OnInit, Input } from '@angular/core';\nimport {Component, OnDestroy, OnInit} from '@angular/core';\nimport { PostsService } from \"../posts.service\";\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.less']\n})\nexport class PostListComponent implements OnInit, OnDestroy {\n\n  // posts = [\n  //   {title: 'First Post', content: 'This is the first post\\'s content'},\n  //   {title: 'Seconds Post', content: 'This is the second post\\'s content'},\n  //   {title: 'Third Post', content: 'This is the third post\\'s content'},\n  // ];\n\n  // @Input() posts: Post[] = [];\n  posts: Post[] = [];\n  private postsSub: Subscription;\n\n\n  constructor(public postsService: PostsService) {}\n\n  // Option 1 for injecting dependencies: (Option 2 is above)\n  // postsService: PostsService;\n  //\n  // constructor(postsService: PostsService) {\n  //   this.postsService = postsService;\n  // }\n\n  ngOnInit() {\n    this.posts = this.postsService.getPosts();\n    this.postsSub = this.postsService.getPostUpdateListener()\n      .subscribe((posts: Post[]) => {\n        this.posts = posts;\n      });\n  }\n\n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Post } from './posts.model';\nimport { Subject } from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class PostsService {\n  private posts: Post[] = [];\n  private postsUpdated = new Subject<Post[]>();\n\n  getPosts() {\n    return [...this.posts];\n  }\n\n  addPost(title: string, content: string) {\n    const post: Post = {\n      title: title,\n      content: content\n    };\n    this.posts.push(post);\n    this.postsUpdated.next([...this.posts]);\n  }\n\n  getPostUpdateListener() {\n    return this.postsUpdated.asObservable();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc3RzL3Jlc3QtcmVxdWVzdHMvcmVzdC1yZXF1ZXN0cy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  rest-requests works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rest-requests',\n  templateUrl: './rest-requests.component.html',\n  styleUrls: ['./rest-requests.component.css']\n})\nexport class RestRequestsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\nimport {catchError} from 'rxjs/operators';\nimport {HttpErrorHandler, HandleError} from '../http-error-handler.service';\nimport {IUser} from '../i-user';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n\n  private handleError: HandleError;\n  private httpOptions = {};\n\n\n  constructor(private http: HttpClient, httpErrorHandler: HttpErrorHandler) {\n    this.handleError = httpErrorHandler.createHandleError('sService');\n\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'// ,\n        // 'Authorization': 'my-auth-token'\n      })\n    };\n  }\n\n  login(phone_num: string) {\n    console.log('CALLED LOGIN WITH PHONE = ' + phone_num);\n    return this.http.post('/auth/login-signup', {phone_number: phone_num},\n      {headers: this.httpOptions})\n      .pipe(\n        catchError(this.handleError('login', []))\n      );\n  }\n\n  verify(phone_num: string, ver_num: string) {\n    console.log('CALLED VERIFY WITH PHONE = ' + phone_num + ' AND PASSWORD = ' + ver_num);\n    return this.http.post<IUser>('/auth/verify', {phone_number: phone_num, password: ver_num},\n      {headers: this.httpOptions})\n      .pipe(\n        catchError(this.handleError('verify', []))\n      );\n  }\n\n\n  setToken(token: string): boolean {\n    if (token) {\n      localStorage.setItem('token', token);\n      return true;\n    }\n    console.log('Token NOT found in setToken');\n    return false;\n\n  }\n\n  removeToken(): void {\n    localStorage.removeItem('token');\n  }\n\n  hasToken(): boolean {\n    const token = localStorage.getItem('token');\n    if (token) {\n      return true;\n    }\n    return false;\n  }\n\n  getUserWithToken() {\n    if (this.hasToken()) {\n      return this.http.get('/user/get-profile',\n        {headers: this.httpOptions})\n        .pipe(\n          catchError(this.handleError('login', []))\n        );\n    }\n  }\n\n}\n","module.exports = \"<mat-card>\\n  <form (submit)=\\\"login(postForm)\\\" #postForm=\\\"ngForm\\\">\\n    <mat-form-field>\\n\\n      <!--<input matInput type=\\\"number\\\" ngModel name=\\\"phonenum\\\" required #phonenum=\\\"ngModel\\\">-->\\n      <input matInput type=\\\"text\\\" ngModel name=\\\"phonenum\\\" required #phonenum=\\\"ngModel\\\" (keypress)=\\\"numberOnly($event)\\\">\\n\\n      <mat-error *ngIf=\\\"phonenum.invalid\\\">Please a phone number</mat-error>\\n    </mat-form-field>\\n\\n    <button\\n      mat-raised-button\\n      color=\\\"primary\\\"\\n      type=\\\"submit\\\">Request login</button>\\n\\n  </form>\\n\\n  <form class=\\\"verify-code\\\" (submit)=\\\"verifyCode(postForm)\\\" #postForm=\\\"ngForm\\\" *ngIf=\\\"codeRequestWasSuccessful\\\">\\n    <mat-form-field>\\n\\n      <input matInput type=\\\"text\\\" ngModel name=\\\"vernum\\\" required #vernum=\\\"ngModel\\\" (keypress)=\\\"numberOnly($event)\\\">\\n\\n      <mat-error *ngIf=\\\"vernum.invalid\\\">Please a phone number</mat-error>\\n    </mat-form-field>\\n\\n    <button\\n      mat-raised-button\\n      color=\\\"primary\\\"\\n      type=\\\"submit\\\">Verify</button>\\n\\n  </form>\\n\\n  <mat-dialog-actions>\\n    <button class=\\\"mat-raised-button\\\"(click)=\\\"closeDialog()\\\">Close</button>\\n  </mat-dialog-actions>\\n\\n</mat-card>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItZm9ybXMvbG9naW4vbG9naW4uY29tcG9uZW50Lmxlc3MifQ== */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormGroup, NgForm} from '@angular/forms';\nimport {LoginService} from '../login.service';\nimport {Router} from '@angular/router';\nimport {IUser} from '../../i-user';\nimport {UserHolderService} from '../../user-holder.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.less']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n\n  localData = {};\n  codeRequestWasSuccessful = false;\n\n  // Saving the number for retrying\n  numberSaveForRetry = '';\n\n  constructor(public loginService: LoginService, private router: Router, public userHolderService: UserHolderService,\n              private dialogRef: MatDialogRef<LoginComponent>,\n              @Inject(MAT_DIALOG_DATA) data) {}\n\n  numberOnly(event): boolean {\n    const charCode = (event.which) ? event.which : event.keyCode;\n    return !(charCode > 31 && (charCode < 48 || charCode > 57));\n  }\n\n  login(form: NgForm): void {\n  if (form.invalid) {\n    return;\n  }\n\n  const val = form.value.phonenum;\n  this.numberSaveForRetry = val;\n  console.log('Phone = ' + val);\n\n\n  this.loginService.login(val)\n    .subscribe(\n      (data) => {\n        console.log(typeof(data));\n        if (data instanceof Array && data.length === 0) {\n          console.log('No data received');\n          this.codeRequestWasSuccessful = false;\n          return;\n        }\n        this.codeRequestWasSuccessful = true;\n        console.log('The user got a code');\n\n      }\n    );\n\n}\n\n\n\n\n  verifyCode(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n\n    const val = form.value.vernum;\n\n    console.log('Verify number = ' + val);\n\n\n    this.loginService.verify(this.numberSaveForRetry, val)\n      .subscribe(\n        (data: IUser) => {\n\n          console.log(typeof(data));\n          if (data instanceof Array && data.length === 0) {\n            console.log('Wrong code!');\n            this.codeRequestWasSuccessful = false;\n            return;\n          }\n          this.codeRequestWasSuccessful = true;\n          console.log('Success. Authorized!');\n          console.log(data);\n          this.loginService.setToken(data.accessToken);\n          this.userHolderService.setUser(data);\n          this.closeDialog();\n\n        }\n      );\n\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {IUser} from \"./i-user\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserHolderService {\n\n  user: IUser;\n\n  constructor() {\n    this.user = null;\n  }\n\n  setUser(user: IUser) {\n    this.user = user;\n    console.log('I got the user ' + user);\n  }\n\n  getUser(): IUser {\n    return this.user;\n  }\n\n  removeUser() {\n    this.user = null;\n  }\n\n  isLoggedIn() {\n    return this.user != null;\n  }\n}\n","module.exports = \"<div class=\\\"container user-profile-page\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3 \\\">\\n      <div class=\\\"list-group \\\">\\n        <button (click)=\\\"changeActiveBtn(0)\\\" [ngClass]=\\\"{'active':isClicked[0]}\\\"\\n                class=\\\"list-group-item list-group-item-action\\\">Dashboard\\n        </button>\\n        <button (click)=\\\"changeActiveBtn(1)\\\" [ngClass]=\\\"{'active':isClicked[1]}\\\"\\n                class=\\\"list-group-item list-group-item-action \\\">User Management\\n        </button>\\n        <!--<button (click)=\\\"changeActiveBtn(2)\\\" [ngClass]=\\\"{'active':isClicked[2]}\\\" class=\\\"list-group-item list-group-item-action\\\">Used</button>-->\\n        <!--<button (click)=\\\"changeActiveBtn(3)\\\" [ngClass]=\\\"{'active':isClicked[3]}\\\" class=\\\"list-group-item list-group-item-action\\\">Enquiry</button>-->\\n        <!--<button (click)=\\\"changeActiveBtn(4)\\\" [ngClass]=\\\"{'active':isClicked[4]}\\\" class=\\\"list-group-item list-group-item-action\\\">Dealer</button>-->\\n        <!--<button (click)=\\\"changeActiveBtn(5)\\\" [ngClass]=\\\"{'active':isClicked[5]}\\\" class=\\\"list-group-item list-group-item-action\\\">Media</button>-->\\n        <!--<button (click)=\\\"changeActiveBtn(6)\\\" [ngClass]=\\\"{'active':isClicked[6]}\\\" class=\\\"list-group-item list-group-item-action\\\">Post</button>-->\\n        <!--<button (click)=\\\"changeActiveBtn(7)\\\" [ngClass]=\\\"{'active':isClicked[7]}\\\" class=\\\"list-group-item list-group-item-action\\\">Category</button>-->\\n        <!--<button (click)=\\\"changeActiveBtn(8)\\\" [ngClass]=\\\"{'active':isClicked[8]}\\\" class=\\\"list-group-item list-group-item-action\\\">New</button>-->\\n        <!--<button (click)=\\\"changeActiveBtn(9)\\\" [ngClass]=\\\"{'active':isClicked[9]}\\\" class=\\\"list-group-item list-group-item-action\\\">Comments</button>-->\\n        <!--<button (click)=\\\"changeActiveBtn(10)\\\" [ngClass]=\\\"{'active':isClicked[10]}\\\" class=\\\"list-group-item list-group-item-action\\\">Appearance</button>-->\\n        <!--<button (click)=\\\"changeActiveBtn(11)\\\" [ngClass]=\\\"{'active':isClicked[11]}\\\" class=\\\"list-group-item list-group-item-action\\\">Reports</button>-->\\n        <!--<button (click)=\\\"changeActiveBtn(12)\\\" [ngClass]=\\\"{'active':isClicked[12]}\\\" class=\\\"list-group-item list-group-item-action\\\">Settings</button>-->\\n\\n\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-9\\\" *ngIf=\\\"isClicked[0]\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <h4>Let's get to know you!</h4>\\n              <hr>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <form (submit)=\\\"editProfile(postForm)\\\" #postForm=\\\"ngForm\\\">\\n                <div class=\\\"form-group row\\\">\\n                  <mat-form-field class=\\\"edit-profile-input\\\" appearance=\\\"outline\\\">\\n                    <mat-label>Email</mat-label>\\n                    <!--<input matInput placeholder=\\\"Placeholder\\\">-->\\n                    <input matInput ngModel name=\\\"email\\\" required #email=\\\"ngModel\\\"\\n                           id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"ex@ample.com\\\" class=\\\"form-control here\\\"\\n                           required=\\\"required\\\" type=\\\"email\\\">\\n                    <mat-icon matSuffix>email</mat-icon>\\n                    <mat-hint>ex@ample.com</mat-hint>\\n                  </mat-form-field>\\n                  <!--<label for=\\\"email\\\" class=\\\"col-4 col-form-label\\\">Email*</label>-->\\n                  <!--<div class=\\\"col-8\\\">-->\\n                  <!--<mat-form-field>-->\\n                  <!--<input ngModel name=\\\"email\\\" required #email=\\\"ngModel\\\"-->\\n                  <!--id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"ex@ample.com\\\" class=\\\"form-control here\\\" required=\\\"required\\\" type=\\\"email\\\">-->\\n                  <!--</mat-form-field>-->\\n                  <!--</div>-->\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <mat-form-field class=\\\"edit-profile-input\\\" appearance=\\\"outline\\\">\\n                    <mat-label>First Name</mat-label>\\n                    <!--<input matInput placeholder=\\\"Placeholder\\\">-->\\n                    <input matInput ngModel name=\\\"fname\\\" #fname=\\\"ngModel\\\"\\n                           id=\\\"fname\\\" name=\\\"fname\\\" placeholder=\\\"First Name\\\" class=\\\"form-control here\\\" type=\\\"text\\\">\\n                    <mat-icon matSuffix>person</mat-icon>\\n                    <mat-hint>John</mat-hint>\\n                  </mat-form-field>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <mat-form-field class=\\\"edit-profile-input\\\" appearance=\\\"outline\\\">\\n                    <mat-label>Last Name</mat-label>\\n                    <!--<input matInput placeholder=\\\"Placeholder\\\">-->\\n                    <input matInput ngModel name=\\\"lname\\\" #lname=\\\"ngModel\\\"\\n                           id=\\\"lname\\\" name=\\\"lname\\\" placeholder=\\\"Last Name\\\" class=\\\"form-control here\\\" type=\\\"text\\\">\\n                    <mat-icon matSuffix>people</mat-icon>\\n                    <mat-hint>Doe</mat-hint>\\n                  </mat-form-field>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <mat-form-field class=\\\"edit-profile-input\\\" appearance=\\\"outline\\\">\\n                    <mat-label>About me</mat-label>\\n                    <!--<input matInput placeholder=\\\"Placeholder\\\">-->\\n                    <textarea matInput ngModel name=\\\"publicinfo\\\" #publicinfo=\\\"ngModel\\\"\\n                              id=\\\"publicinfo\\\" name=\\\"publicinfo\\\" cols=\\\"40\\\" rows=\\\"4\\\" class=\\\"form-control\\\"></textarea>\\n                    <mat-icon matSuffix>content_paste</mat-icon>\\n                    <mat-hint></mat-hint>\\n                  </mat-form-field>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <mat-form-field class=\\\"edit-profile-input\\\" appearance=\\\"outline\\\">\\n                    <mat-label>Country</mat-label>\\n                    <!--<input matInput placeholder=\\\"Placeholder\\\">-->\\n                    <input matInput ngModel name=\\\"country\\\" #country=\\\"ngModel\\\"\\n                           id=\\\"country\\\" name=\\\"country\\\" placeholder=\\\"Wonderland\\\" class=\\\"form-control here\\\" type=\\\"text\\\">\\n                    <mat-icon matSuffix>not_listed_location</mat-icon>\\n                    <mat-hint></mat-hint>\\n                  </mat-form-field>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                    <label for=\\\"owner\\\" class=\\\"col-4 col-form-label\\\">Do you own a restaurant/bar?</label>\\n                    <div class=\\\"col-1\\\">\\n                      <input ngModel name=\\\"owner\\\" #owner=\\\"ngModel\\\"\\n                             id=\\\"owner\\\" name=\\\"owner\\\" style=\\\"width: 30px; height: 30px\\\" class=\\\"form-control here\\\"\\n                             type=\\\"checkbox\\\">\\n\\n                      <!--<mat-form-field class=\\\"edit-profile-input\\\" appearance=\\\"outline\\\">-->\\n                      <!--<mat-label>Owner?</mat-label>-->\\n                      <!--&lt;!&ndash;<input matInput placeholder=\\\"Placeholder\\\">&ndash;&gt;-->\\n                      <!--<input matInput ngModel name=\\\"owner\\\" #owner=\\\"ngModel\\\"-->\\n                      <!--id=\\\"owner\\\" name=\\\"owner\\\" style=\\\"width: 30px; height: 30px\\\" class=\\\"form-control here\\\" type=\\\"checkbox\\\">-->\\n                      <!--<mat-icon matSuffix>more_vert</mat-icon>-->\\n                      <!--<mat-hint></mat-hint>-->\\n                  <!--</mat-form-field>-->\\n                </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <div class=\\\"offset-4 col-4\\\">\\n                    <!--<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Update My Profile</button>-->\\n                    <button\\n                      mat-raised-button\\n                      color=\\\"primary\\\"\\n                      type=\\\"submit\\\">Update Profile\\n                    </button>\\n                  </div>\\n                  <br/>\\n                  <div class=\\\"col-4\\\">\\n                    <button class=\\\"btn btn-default\\\">Skip</button>\\n                  </div>\\n                </div>\\n              </form>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n    <div class=\\\"col-md-9\\\" *ngIf=\\\"isClicked[1]\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <h4>More options</h4>\\n              <hr>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n\\n              Some text\\n\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n  </div>\\n</div>\\n\"","module.exports = \".edit-profile-input {\\n  width: 80%;\\n  margin: auto;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VyYW4vV2Vic3Rvcm1Qcm9qZWN0cy93OGVyL3dlYi9zcmMvYXBwL3VzZXItcHJvZmlsZS91c2VyLXByb2ZpbGUuY29tcG9uZW50Lmxlc3MiLCJzcmMvYXBwL3VzZXItcHJvZmlsZS91c2VyLXByb2ZpbGUuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0VBQ0EsYUFBQTtDQ0NEIiwiZmlsZSI6InNyYy9hcHAvdXNlci1wcm9maWxlL3VzZXItcHJvZmlsZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lZGl0LXByb2ZpbGUtaW5wdXQge1xuICB3aWR0aDogODAlO1xuICBtYXJnaW46IGF1dG87XG59XG4iLCIuZWRpdC1wcm9maWxlLWlucHV0IHtcbiAgd2lkdGg6IDgwJTtcbiAgbWFyZ2luOiBhdXRvO1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport {NgForm} from \"@angular/forms\";\nimport {IUser} from \"../i-user\";\nimport {UserUpdatesService} from \"./user-updates.service\";\nimport {User} from \"../user\";\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.less']\n})\nexport class UserProfileComponent implements OnInit {\n\n  public numOfSidenavBtns = 13;\n  public isClicked: boolean[] = new Array<boolean>(this.numOfSidenavBtns);\n  public oldActive = 0;\n\n  changeActiveBtn(newActive: number) {\n      this.isClicked[this.oldActive] = false;\n      this.isClicked[newActive]      = true;\n\n      this.oldActive = newActive;\n  }\n\n\n  editProfile(form: NgForm) {\n    if (form.invalid) {\n      console.log('Invalid form');\n      return;\n    }\n\n    const val = form.value;\n    const user: IUser = {\n        first_name: val.fname,\n        last_name: val.lname,\n        email: val.email,\n        about_me: val.public_info,\n        is_admin: val.owner\n      };\n\n    // const user: User = new User();\n    // {\n    //   first_name: val.fname,\n    //   last_name: val.lname,\n    //   email: val.email,\n    //   about_me: val.public_info,\n    //   is_admin: val.owner\n    // };\n\n    // user.first_name = val.fname;\n    // user.last_name = val.lname;\n    // user.email = val.email;\n    // user.about_me = val.public_info;\n    // user.is_admin = val.owner;\n\n\n\n    this.userUpdatesService.editProfile(user)\n      .subscribe(\n        (data) => {\n          console.log(typeof(data));\n          if (data instanceof Array && data.length == 0) {\n            console.log('No data received');\n            return;\n          }\n\n          console.log('The user got a code');\n\n        }\n      );\n\n  }\n\n\n  constructor(public userUpdatesService: UserUpdatesService) { }\n\n  ngOnInit() {\n    this.isClicked[0] = true;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {HandleError, HttpErrorHandler} from '../http-error-handler.service';\nimport {catchError} from 'rxjs/internal/operators';\nimport {IUser} from '../i-user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserUpdatesService {\n\n\n  private handleError: HandleError;\n  private httpOptions = {};\n\n\n  constructor(private http: HttpClient, httpErrorHandler: HttpErrorHandler) {\n    this.handleError = httpErrorHandler.createHandleError('sService');\n\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n  }\n\n  editProfile(user: IUser) {\n    console.log('Called editProfile');\n    return this.http.post('/user/edit-profile',\n      {\n        first_name: user.first_name,\n        last_name: user.last_name,\n        // user.birthday\n        gender: user.gender,\n        about_me: user.about_me,\n        email: user.email,\n        // address: user.address\n        country: user.country,\n        is_admin: user.is_admin\n      },\n      {headers: this.httpOptions})\n      .pipe(\n        catchError(this.handleError('login', []))\n      );\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}