{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.less","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.less","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/http-error-handler.service.ts","webpack:///./src/app/message.service.ts","webpack:///./src/app/posts/post-create/post-create.component.css","webpack:///./src/app/posts/post-create/post-create.component.html","webpack:///./src/app/posts/post-create/post-create.component.ts","webpack:///./src/app/posts/post-list/post-list.component.html","webpack:///./src/app/posts/post-list/post-list.component.less","webpack:///./src/app/posts/post-list/post-list.component.ts","webpack:///./src/app/posts/posts.service.ts","webpack:///./src/app/user-forms/login.service.ts","webpack:///./src/app/user-forms/login/login.component.html","webpack:///./src/app/user-forms/login/login.component.less","webpack:///./src/app/user-forms/login/login.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n// import { RestRequestsComponent } from \"./rests/rest-requests/rest-requests.component\";\r\n\r\n// const routes: Routes = [\r\n//   {path: 'rest-requests', component: RestRequestsComponent}\r\n// ];\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<app-header></app-header>\\r\\n<main>\\r\\n  <!--<app-post-create (postCreated)=\\\"onPostAdded($event)\\\"></app-post-create>-->\\r\\n  <!--<app-post-list [posts]=\\\"storedPosts\\\"></app-post-list>-->\\r\\n\\r\\n  <!--<app-post-create></app-post-create>-->\\r\\n  <!--<app-post-list></app-post-list>-->\\r\\n  \\r\\n  <!-- <router-outlet></router-outlet> -->\\r\\n\\r\\n  <app-login></app-login>\\r\\n</main>\\r\\n\"","module.exports = \"main {\\n  margin: 1rem auto auto;\\n  width: 80%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvRDovVXNlcnMvU2VmaS9Qcm9qZWN0cy93OGVyL3dlYi9zcmMvYXBwL2FwcC5jb21wb25lbnQubGVzcyIsInNyYy9hcHAvYXBwLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsdUJBQUE7RUFDQSxXQUFBO0NDQ0QiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYWluIHtcbiAgbWFyZ2luOiAxcmVtIGF1dG8gYXV0bztcbiAgd2lkdGg6IDgwJTtcbn1cbiIsIm1haW4ge1xuICBtYXJnaW46IDFyZW0gYXV0byBhdXRvO1xuICB3aWR0aDogODAlO1xufVxuIl19 */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.less']\r\n})\r\nexport class AppComponent {\r\n  title = 'w8erWebapp';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport {FormsModule} from \"@angular/forms\";\r\n\r\nimport { MatInputModule,\r\n  MatCardModule,\r\n  MatButtonModule,\r\n  MatToolbarModule,\r\n  MatExpansionModule } from '@angular/material';\r\n\r\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\r\nimport {PostCreateComponent} from \"./posts/post-create/post-create.component\";\r\nimport {PostListComponent} from \"./posts/post-list/post-list.component\";\r\nimport {PostsService} from \"./posts/posts.service\";\r\nimport { LoginComponent } from './user-forms/login/login.component';\r\nimport {LoginService} from \"./user-forms/login.service\";\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HttpModule } from '@angular/http';\r\nimport { HttpErrorHandler } from './http-error-handler.service';\r\nimport { MessageService } from './message.service';\r\n// import { RestRequestsComponent } from './rests/rest-requests/rest-requests.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    PostCreateComponent,\r\n    PostListComponent,\r\n    LoginComponent//,\r\n    // RestRequestsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    HttpClientModule,\r\n    HttpModule,\r\n  ],\r\n  providers: [PostsService, LoginService, HttpErrorHandler, MessageService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<!-- <mat-toolbar color=\\\"primary\\\">Text <a routerLink=\\\"/rest-requests\\\">CLICK</a></mat-toolbar> -->\\r\\n<mat-toolbar color=\\\"primary\\\">Text</mat-toolbar> \\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50Lmxlc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.less']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { MessageService } from './message.service';\r\n\r\n/** Type of the handleError function returned by HttpErrorHandler.createHandleError */\r\nexport type HandleError =\r\n  <T> (operation?: string, result?: T) => (error: HttpErrorResponse) => Observable<T>;\r\n\r\n/** Handles HttpClient errors */\r\n@Injectable()\r\nexport class HttpErrorHandler {\r\n  constructor(private messageService: MessageService) { }\r\n\r\n  /** Create curried handleError function that already knows the service name */\r\n  createHandleError = (serviceName = '') => <T>\r\n    (operation = 'operation', result = {} as T) => this.handleError(serviceName, operation, result);\r\n\r\n  /**\r\n   * Returns a function that handles Http operation failures.\r\n   * This error handler lets the app continue to run as if no error occurred.\r\n   * @param serviceName = name of the data service that attempted the operation\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  handleError<T> (serviceName = '', operation = 'operation', result = {} as T) {\r\n\r\n    return (error: HttpErrorResponse): Observable<T> => {\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      const message = (error.error instanceof ErrorEvent) ?\r\n        error.error.message :\r\n       `server returned code ${error.status} with body \"${error.error}\"`;\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      this.messageService.add(`${serviceName}: ${operation} failed: ${message}`);\r\n\r\n      // Let the app keep running by returning a safe result.\r\n      return of( result );\r\n    };\r\n\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class MessageService {\r\n  messages: string[] = [];\r\n\r\n  add(message: string) {\r\n    this.messages.push(message);\r\n  }\r\n\r\n  clear() {\r\n    this.messages = [];\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","module.exports = \"\\r\\nmat-form-field,\\r\\ntextarea {\\r\\n  width: 100%;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdHMvcG9zdC1jcmVhdGUvcG9zdC1jcmVhdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7O0VBRUUsWUFBWTs7Q0FFYiIsImZpbGUiOiJzcmMvYXBwL3Bvc3RzL3Bvc3QtY3JlYXRlL3Bvc3QtY3JlYXRlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxubWF0LWZvcm0tZmllbGQsXHJcbnRleHRhcmVhIHtcclxuICB3aWR0aDogMTAwJTtcclxuXHJcbn1cclxuIl19 */\"","module.exports = \"<!--<textarea rows=\\\"6\\\" [value]=\\\"newPost\\\" #postInput>{{ newPost }}</textarea>-->\\r\\n<mat-card>\\r\\n  <form (submit)=\\\"onAddPost(postForm)\\\" #postForm=\\\"ngForm\\\">\\r\\n    <mat-form-field>\\r\\n      <!--<input matInput type=\\\"text\\\" [(ngModel)]=\\\"enteredTitle\\\">-->\\r\\n      <input matInput type=\\\"text\\\" ngModel name=\\\"title\\\" required #title=\\\"ngModel\\\">\\r\\n      <mat-error *ngIf=\\\"title.invalid\\\">Please enter a title</mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <!--<textarea matInput rows=\\\"6\\\" [(ngModel)]=\\\"enteredContent\\\">{{ newPost }}</textarea>-->\\r\\n      <textarea matInput rows=\\\"4\\\" ngModel name=\\\"content\\\">{{ newPost }}</textarea>\\r\\n    </mat-form-field>\\r\\n    <button\\r\\n      mat-raised-button\\r\\n      color=\\\"accent\\\"\\r\\n      type=\\\"submit\\\">Save Post</button>\\r\\n    <!--(click)=\\\"onAddPost()\\\">Save Post</button>-->\\r\\n  </form>\\r\\n\\r\\n</mat-card>\\r\\n\\r\\n<!--<button (click)=\\\"onAddPost(postInput)\\\">Save Post</button>-->\\r\\n\\r\\n\\r\\n<p>{{ newPost }}</p>\\r\\n\\r\\n\\r\\n\"","// import { Post } from '../posts.model';\r\n// import { Component, EventEmitter, Output } from \"@angular/core\";\r\nimport { Component } from \"@angular/core\";\r\nimport { NgForm } from '@angular/forms';\r\nimport {PostsService} from \"../posts.service\";\r\n\r\n@Component({\r\n  selector: 'app-post-create',\r\n  templateUrl: './post-create.component.html',\r\n  styleUrls: ['./post-create.component.css']\r\n})\r\nexport class PostCreateComponent {\r\n\r\n  enteredTitle   = \"\";\r\n  enteredContent = \"\";\r\n  // @Output() postCreated = new EventEmitter<Post>();\r\n\r\n  // onAddPost(postInput: HTMLTextAreaElement) {\r\n  //   // console.dir(postInput);\r\n  //   this.newPost = postInput.value;\r\n  // }\r\n  constructor(public postsService: PostsService) {}\r\n\r\n  onAddPost(form: NgForm) {\r\n    // const post: Post = {title: this.enteredTitle, content: this.enteredContent};\r\n\r\n    if (form.invalid) {\r\n      return;\r\n    }\r\n    // const post: Post = {title: form.value.title, content: form.value.content};\r\n    // this.postCreated.emit(post);\r\n    this.postsService.addPost(form.value.title, form.value.content);\r\n  }\r\n\r\n}\r\n","module.exports = \"<!--<mat-accordion multi=\\\"true\\\">-->   <!--Set multi=true if you want more than one to be expandable at once-->\\r\\n<mat-accordion *ngIf=\\\"posts.length > 0\\\">\\r\\n  <mat-expansion-panel *ngFor=\\\"let post of posts\\\">\\r\\n    <mat-expansion-panel-header>\\r\\n      {{ post.title }}\\r\\n    </mat-expansion-panel-header>\\r\\n\\r\\n    <p>{{ post.content }}</p>\\r\\n  </mat-expansion-panel>\\r\\n</mat-accordion>\\r\\n<p class=\\\"info-text mat-body-1\\\" *ngIf=\\\"posts.length == 0\\\">No posts added yet</p>\\r\\n\"","module.exports = \":host {\\n  display: block;\\n  margin-top: 1rem;\\n}\\n.info-text {\\n  text-align: center  ;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdHMvcG9zdC1saXN0L0Q6L1VzZXJzL1NlZmkvUHJvamVjdHMvdzhlci93ZWIvc3JjL2FwcC9wb3N0cy9wb3N0LWxpc3QvcG9zdC1saXN0LmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9wb3N0cy9wb3N0LWxpc3QvcG9zdC1saXN0LmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBQTtFQUNBLGlCQUFBO0NDQ0Q7QURFRDtFQUNFLHFCQUFBO0NDQUQiLCJmaWxlIjoic3JjL2FwcC9wb3N0cy9wb3N0LWxpc3QvcG9zdC1saXN0LmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLXRvcDogMXJlbTtcbn1cblxuLmluZm8tdGV4dCB7XG4gIHRleHQtYWxpZ246IGNlbnRlciAgO1xufVxuIiwiOmhvc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLXRvcDogMXJlbTtcbn1cbi5pbmZvLXRleHQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXIgIDtcbn1cbiJdfQ== */\"","import { Post } from '../posts.model';\r\nimport { Subscription } from 'rxjs';\r\n\r\n// import { Component, OnInit, Input } from '@angular/core';\r\nimport {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport { PostsService } from \"../posts.service\";\r\n\r\n@Component({\r\n  selector: 'app-post-list',\r\n  templateUrl: './post-list.component.html',\r\n  styleUrls: ['./post-list.component.less']\r\n})\r\nexport class PostListComponent implements OnInit, OnDestroy {\r\n\r\n  // posts = [\r\n  //   {title: 'First Post', content: 'This is the first post\\'s content'},\r\n  //   {title: 'Seconds Post', content: 'This is the second post\\'s content'},\r\n  //   {title: 'Third Post', content: 'This is the third post\\'s content'},\r\n  // ];\r\n\r\n  // @Input() posts: Post[] = [];\r\n  posts: Post[] = [];\r\n  private postsSub: Subscription;\r\n\r\n\r\n  constructor(public postsService: PostsService) {}\r\n\r\n  // Option 1 for injecting dependencies: (Option 2 is above)\r\n  // postsService: PostsService;\r\n  //\r\n  // constructor(postsService: PostsService) {\r\n  //   this.postsService = postsService;\r\n  // }\r\n\r\n  ngOnInit() {\r\n    this.posts = this.postsService.getPosts();\r\n    this.postsSub = this.postsService.getPostUpdateListener()\r\n      .subscribe((posts: Post[]) => {\r\n        this.posts = posts;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.postsSub.unsubscribe();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Post } from './posts.model';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class PostsService {\r\n  private posts: Post[] = [];\r\n  private postsUpdated = new Subject<Post[]>();\r\n\r\n  getPosts() {\r\n    return [...this.posts];\r\n  }\r\n\r\n  addPost(title: string, content: string) {\r\n    const post: Post = {\r\n      title: title,\r\n      content: content\r\n    };\r\n    this.posts.push(post);\r\n    this.postsUpdated.next([...this.posts]);\r\n  }\r\n\r\n  getPostUpdateListener() {\r\n    return this.postsUpdated.asObservable();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\n\r\nimport {User} from \"../user\";\r\nimport { catchError } from 'rxjs/operators';\r\nimport { HttpErrorHandler, HandleError } from '../http-error-handler.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n\r\n\r\n  private handleError: HandleError;\r\n  private httpOptions = {};\r\n\r\n\r\n  constructor(private http: HttpClient, httpErrorHandler: HttpErrorHandler) {\r\n    this.handleError = httpErrorHandler.createHandleError('sService');\r\n\r\n    this.httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json'//,\r\n        // 'Authorization': 'my-auth-token'\r\n      })\r\n    };\r\n  }\r\n\r\n  login(phone_num:string) {\r\n    console.log(\"CALLED LOGIN WITH PHONE = \" + phone_num);\r\n    return this.http.post('/auth/login-signup', {phone_number: phone_num},\r\n      {headers: this.httpOptions})\r\n      .pipe(\r\n        catchError(this.handleError('login', []))\r\n      );\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-card>\\r\\n  <form (submit)=\\\"login(postForm)\\\" #postForm=\\\"ngForm\\\">\\r\\n    <mat-form-field>\\r\\n\\r\\n      <!--<input matInput type=\\\"number\\\" ngModel name=\\\"phonenum\\\" required #phonenum=\\\"ngModel\\\">-->\\r\\n      <input matInput type=\\\"text\\\" ngModel name=\\\"phonenum\\\" required #phonenum=\\\"ngModel\\\" (keypress)=\\\"numberOnly($event)\\\">\\r\\n\\r\\n      <mat-error *ngIf=\\\"phonenum.invalid\\\">Please a phone number</mat-error>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <button\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      type=\\\"submit\\\">Request login</button>\\r\\n\\r\\n  </form>\\r\\n\\r\\n</mat-card>\\r\\n\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItZm9ybXMvbG9naW4vbG9naW4uY29tcG9uZW50Lmxlc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormGroup, NgForm} from \"@angular/forms\";\r\nimport {LoginService} from \"../login.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.less']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  form:FormGroup;\r\n\r\n  constructor(public loginService: LoginService, private router: Router){}\r\n\r\n  // onAddPost(form: NgForm) {\r\n  //   // const post: Post = {title: this.enteredTitle, content: this.enteredContent};\r\n  //\r\n  //   if (form.invalid) {\r\n  //     return;\r\n  //   }\r\n  //   // const post: Post = {title: form.value.title, content: form.value.content};\r\n  //   // this.postCreated.emit(post);\r\n  //   this.postsService.addPost(form.value.title, form.value.content);\r\n  // }\r\n\r\n  numberOnly(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    return !(charCode > 31 && (charCode < 48 || charCode > 57));\r\n\r\n\r\n  }\r\n\r\n  login(form: NgForm) {\r\n    if (form.invalid) {\r\n      return;\r\n    }\r\n\r\n    console.log(form.value.phonenum);\r\n    const val = form.value.phonenum;\r\n\r\n\r\n    this.loginService.login(val)\r\n      .subscribe(\r\n        (data) => {\r\n          console.log(typeof(data));\r\n          if (data instanceof Array && data.length == 0) {\r\n            console.log(\"No data received\");\r\n            return;\r\n          }\r\n          console.log(\"User is logged in\");\r\n          // this.router.navigateByUrl('/');\r\n        }\r\n      );\r\n\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}